apiVersion: apps/v1
kind: Deployment
metadata:
  name:  springbootmongo-deploy
  labels:
    app:  springapp
spec:
  selector:
    matchLabels:
      app: springapp
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:  # pod template
    metadata:
      name: springboot-pod
      labels:
        app:  springapp
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  springbootapp-container
        image:  milua25/springboot       
        env:  
        - name: MONGO_DB_USERNAME
          valueFrom:
           secretKeyRef:
             name: mongo-db-credentials
             key: mongo-username
        - name: MONGO_DB_PASSWORD
          valueFrom:
           secretKeyRef:
             name: mongo-db-credentials
             key:  mongo-password
        - name: MONGO_DB_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: mongo-config
              key: mongo-hostname
        ports:
         - containerPort:  8080
---

apiVersion: v1
kind: Service
metadata:
  name: springbootsvc
spec:
  selector:
    app: springapp
  type: NodePort
  ports:
  - port: 80 
    targetPort: 8080 
    # If you set the `spec.type` field to `NodePort` and you want a specific port number,
    # you can specify a value in the `spec.ports[*].nodePort` field.
    nodePort: 32100
    
